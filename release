#!/bin/bash

set -e

cd "$(dirname "$0")"

version="$1"
if [ -z "$version" ]; then
    echo "usage: $0 <version>" >&2
    exit 1
fi

case "$(git describe --dirty)" in
    *-dirty)
        echo -e "\e[31;1mDirty working tree\e[0m - please stash or commit changes to release."
        exit 1
        ;;
esac

c="\e[36m"
r="\e[0m"

echo -e "${c}get current branch ...${r}"
branch="$(git symbolic-ref --short HEAD)"

echo -e "${c}build rel version string ...${r}"
raw_ver=$(
cat << EOF
{"version":"$version","commit":"$(git rev-parse HEAD)","buildtime":"$(date --utc +%Y-%m-%dT%H:%M:%SZ)"}
EOF
)
echo "$raw_ver"

echo -e "${c}encode rel version string ...${r}"
ver=$(echo "$raw_ver" | base64 -w 0)
echo "$ver"

echo -e "${c}update version file ...${r}"
sed -i -e "s#var versionString =.*#var versionString = \"$ver\"#" lib/version/version.go

echo -e "${c}commit new version file ...${r}"
git commit -s -m "Update version to $version" lib/version/version.go

echo -e "${c}tag release ...${r}"
git tag -a -m "Version $version" "$version"

echo -e "${c}build dev version string ...${r}"
raw_ver=$(
cat << EOF
{"version":"${version}-dev","commit":"$(git rev-parse HEAD)","buildtime":"$(date --utc +%Y-%m-%dT%H:%M:%SZ)"}
EOF
)
echo "$raw_ver"

echo -e "${c}encode dev version string ...${r}"
ver=$(echo "$raw_ver" | base64 -w 0)
echo "$ver"

echo -e "${c}update version file ...${r}"
sed -i -e "s#var versionString =.*#var versionString = \"$ver\"#" lib/version/version.go

echo -e "${c}commit new version file ...${r}"
git commit -s -m "Update version to ${version}-dev" lib/version/version.go

echo -e "${c}checkout release branch ...${r}"
git checkout release --

echo -e "${c}merge release tag to branch ...${r}"
git merge --no-ff --log --no-edit --signoff --no-stat "$version"

echo -e "${c}restore branch ...${r}"
git checkout "$branch"
